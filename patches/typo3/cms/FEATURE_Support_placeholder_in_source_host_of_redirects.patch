Index: typo3/sysext/redirects/Classes/Evaluation/SourceHost.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- typo3/sysext/redirects/Classes/Evaluation/SourceHost.php	(date 1515879118000)
+++ typo3/sysext/redirects/Classes/Evaluation/SourceHost.php	(date 1521070775000)
@@ -31,6 +31,7 @@
     {
         $jsCode = [];
         $jsCode[] = 'if (value === \'*\') {return value;}';
+        $jsCode[] = 'if (value.substring(0,1) === \'%\') {return value;}';
         $jsCode[] = 'var parser = document.createElement(\'a\');';
         $jsCode[] = 'parser.href = value.indexOf(\'://\') != -1 ? value : \'http://\' + value;';
         $jsCode[] = 'return parser.host;';
@@ -49,6 +50,10 @@
         if ($value === '*') {
             return $value;
         }
+
+        if ($value[0] === '%') {
+            return $value;
+        }
 
         // 2) Check if value contains a protocol like http:// https:// etc...
         if (strpos($value, '://') !== false) {
Index: typo3/sysext/redirects/Classes/FormDataProvider/ValuePickerItemDataProvider.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- typo3/sysext/redirects/Classes/FormDataProvider/ValuePickerItemDataProvider.php	(date 1515879118000)
+++ typo3/sysext/redirects/Classes/FormDataProvider/ValuePickerItemDataProvider.php	(date 1521070775000)
@@ -36,13 +36,22 @@
     {
         if ($result['tableName'] === 'sys_redirect' && isset($result['processedTca']['columns']['source_host'])) {
             $domains = $this->getDomains();
+            $pid = 0;
+            $items = $result['processedTca']['columns']['source_host']['config']['valuePicker']['items'];
             foreach ($domains as $domain) {
-                $result['processedTca']['columns']['source_host']['config']['valuePicker']['items'][] =
-                [
+                if ($pid !== $domain['pid']) {
+                    $pid = $domain['pid'];
+                    $items[] = [
+                        '%site_root_' . $pid . '%',
+                        '%site_root_' . $pid . '%'
+                    ];
+                }
+                $items[] = [
                     $domain['domainName'],
                     $domain['domainName'],
                 ];
             }
+            $result['processedTca']['columns']['source_host']['config']['valuePicker']['items'] = $items;
         }
         return $result;
     }
@@ -57,7 +66,7 @@
         $queryBuilder = GeneralUtility::makeInstance(ConnectionPool::class)->getQueryBuilderForTable('sys_domain');
         $queryBuilder->getRestrictions()->add(GeneralUtility::makeInstance(HiddenRestriction::class));
         $domains = $queryBuilder
-            ->select('domainName')
+            ->select('domainName', 'pid')
             ->from('sys_domain')
             ->execute()
             ->fetchAll();
Index: typo3/sysext/redirects/Classes/Service/RedirectCacheService.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- typo3/sysext/redirects/Classes/Service/RedirectCacheService.php	(date 1515879118000)
+++ typo3/sysext/redirects/Classes/Service/RedirectCacheService.php	(date 1521070775000)
@@ -81,10 +81,23 @@
             ->execute();
         while ($row = $statement->fetch()) {
             $host = $row['source_host'] ?: '*';
-            if ($row['is_regexp']) {
-                $redirects[$host]['regexp'][$row['source_path']][$row['uid']] = $row;
-            } else {
-                $redirects[$host]['flat'][rtrim($row['source_path'], '/') . '/'][$row['uid']] = $row;
+            $hosts = [];
+            // source host is a placeholder
+            if ($host[0] === '%') {
+                preg_match('/%site_root_([0-9]*)%/', $host, $matches);
+                if (!empty($matches[1])) {
+                    $domains = $this->getDomainsFromPid($matches[1]);
+                    $hosts = array_column($domains, 'domainName');
+                }
+            } else {
+                $hosts = [$host];
+            }
+            foreach ($hosts as $host) {
+                if ($row['is_regexp']) {
+                    $redirects[$host]['regexp'][$row['source_path']][$row['uid']] = $row;
+                } else {
+                    $redirects[$host]['flat'][rtrim($row['source_path'], '/') . '/'][$row['uid']] = $row;
+                }
             }
         }
         $this->cache->set('redirects', $redirects, ['redirects']);
@@ -107,6 +120,13 @@
             ->execute();
         while ($row = $statement->fetch()) {
             $host = $row['source_host'] ?: '*';
+            if ($host[0] === '%') {
+                preg_match('/%site_root_([0-9]*)%/', $host, $matches);
+                if (!empty($matches[1])) {
+                    $domains = $this->getDomainsFromPid($matches[1]);
+                    $host = implode(', ', array_column($domains, 'domainName'));
+                }
+            }
             if ($row['is_regexp']) {
                 $redirects[$host]['regexp'][$row['source_path']][$row['uid']] = $row;
             } else {
@@ -116,6 +136,28 @@
         return $redirects;
     }
 
+    /**
+     * Get sys_domain records from database
+     *
+     * @param int $pid
+     * @return array domain records
+     */
+    protected function getDomainsFromPid($pid): array
+    {
+        $queryBuilder = GeneralUtility::makeInstance(ConnectionPool::class)->getQueryBuilderForTable('sys_domain');
+        $queryBuilder->getRestrictions()->add(GeneralUtility::makeInstance(HiddenRestriction::class));
+        $domains = $queryBuilder
+            ->select('domainName')
+            ->from('sys_domain')
+            ->where($queryBuilder->expr()->eq(
+                'pid',
+                $queryBuilder->createNamedParameter($pid, \PDO::PARAM_INT)
+            ))
+            ->execute()
+            ->fetchAll();
+        return $domains;
+    }
+
     /**
      * Flushes all redirects from the cache
      */
Index: typo3/sysext/redirects/Resources/Private/Templates/Management/Overview.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- typo3/sysext/redirects/Resources/Private/Templates/Management/Overview.html	(date 1515879118000)
+++ typo3/sysext/redirects/Resources/Private/Templates/Management/Overview.html	(date 1521070775000)
@@ -18,7 +18,7 @@
 </f:section>
 
 <f:section name="table">
-	<div class="table-fit">
+	<div>
 		<table class="table table-striped table-hover">
 			<thead>
 				<tr>
@@ -38,7 +38,7 @@
 						<f:for each="{groupedRedirects}" as="redirectRecords">
 							<f:for each="{redirectRecords}" as="redirect">
 								<tr>
-									<td>{redirect.source_host}</td>
+									<td>{domainName} <f:if condition="{domainName} != {redirect.source_host}">({redirect.source_host})</f:if></td>
 									<td>
 										<f:alias map="{
 											disable: '{f:translate(key: \'LLL:EXT:redirects/Resources/Private/Language/locallang_module_redirect.xlf:record_disabled\')}',
@@ -85,9 +85,16 @@
 													<span class="btn btn-default disabled"><core:icon identifier="empty-empty" /></span>
 												</f:then>
 												<f:else>
-													<f:link.external class="btn btn-default" uri="{f:if(condition: '{redirect.source_host} == \'*\'', then: defaultUrl, else: redirect.source_host)}{redirect.source_path}" target="_blank">
-														<core:icon identifier="actions-view-page" />
-													</f:link.external>
+													<f:if condition="{domainName} != {redirect.source_host}">
+														<f:then>
+															<span class="btn btn-default disabled"><core:icon identifier="empty-empty" /></span>
+														</f:then>
+														<f:else>
+															<f:link.external class="btn btn-default" uri="{f:if(condition: '{redirect.source_host} == \'*\'', then: defaultUrl, else: redirect.source_host)}{redirect.source_path}" target="_blank">
+																<core:icon identifier="actions-view-page" />
+															</f:link.external>
+														</f:else>
+													</f:if>
 												</f:else>
 											</f:if>
 											<a class="btn btn-default"
